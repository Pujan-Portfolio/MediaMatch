from flask import Blueprint, render_template, request, jsonify, make_response
import json
from PIL import Image
import  urllib
from random import randint
from urllib.request import urlopen
from website.models import User
import pymongo
client = pymongo.MongoClient("mongodb+srv://admin:123a@cluster0.9n27l.mongodb.net/Users?retryWrites=true&w=majority")
db = client.test.Users
page = 1
baseDetailUrl = "https://api.themoviedb.org/3/movie/movie_id?api_key=31657fcbc4dc6a9f0e0277b60a6314e9&language=en-US"
baseUrl = "https://api.themoviedb.org/3/discover/movie?api_key=31657fcbc4dc6a9f0e0277b60a6314e9&language=en-US&pg=2&sort_by=popularity.desc&with_genres="
tempUrl = ""
tempUrl = baseUrl + str(page)
runningUrl = ""
json_obj = urlopen(baseUrl)
data = json.load(json_obj)
var = data['results']
list_len = len(data['results'])

dontWatch = []
watch = []

dontWatchTitle = []
watchTitle = []

dontWatch2 = []
watch2 = []


excludeGenres = []
testWatch = ['sunny','rainy','cloud']
i = 0
constantString = ""

views = Blueprint('views', __name__)



@views.route('/signup', methods=['POST'])
def signup():
    print("erere")
    return User().signup()

@views.route('/signin', methods=['POST'])
def signin():
    print("erere")
    return User().login()    

@views.route('/', methods=['GET','POST'])
def home():
    return render_template("index.html")

@views.route('/genre', methods=['GET','POST'])
def genreTest():
    return render_template("genreTest.html")

@views.route('/login', methods=['GET','POST'])
def loginTest():
    return render_template("login.html")

@views.route('/register')
def registerTest():
    print("dsada")
    return render_template("signup.html")

@views.route('/listTest')
def listTest():
    print("dsada")
    return render_template("listTest.html")    
@views.route('/listNoTest')
def listNoTest():
    print("dsada")
    return render_template("listNoTest.html")        

@views.route('/signout')
def signout():
    print("dsada")
    return User().signout()  


@views.route('/setList',methods=['GET','POST'])
def setList():
    print("hello??")
    global constantString
    global baseUrl
    global i
    global json_obj
    global data
    global page
    global var
    global runningUrl
    global page    
    req = request.get_json()
    res = make_response(jsonify({"message": "JSON recieved", "title":watch},200))
    return res

@views.route('/setNoList',methods=['GET','POST'])
def setNoList():
    print("hello??")
    global constantString
    global baseUrl
    global i
    global json_obj
    global data
    global page
    global var
    global runningUrl
    global page    
    req = request.get_json()
    res = make_response(jsonify({"message": "JSON recieved", "title":dontWatch},200))
    return res

@views.route('/removeItem',methods=['GET','POST'])
def removeItem():
    print("hello??")
    global constantString
    global baseUrl
    global i
    global json_obj
    global data
    global page
    global var
    global runningUrl
    global page    
    req = request.get_json()
    print(req['remove'])
    db.update(
        {"email":str(User().getSession())},
        {"$pull":{
            "watch": str(req['remove'])
         }}
        )
    res = make_response(jsonify({"message": "JSON recieved", "title":watch},200))
    return res

@views.route('/removeNoItem',methods=['GET','POST'])
def removeNoItem():
    print("hello??")
    global constantString
    global baseUrl
    global i
    global json_obj
    global data
    global page
    global var
    global runningUrl
    global page    
    req = request.get_json()
    print(req['remove'])
    db.update(
        {"email":str(User().getSession())},
        {"$pull":{
            "dontWatch": str(req['remove'])
         }}
        )
    res = make_response(jsonify({"message": "JSON recieved", "title":dontWatch},200))
    return res


@views.route('/setGenres', methods=['GET','POST'])
def setGenres():
    global constantString
    global baseUrl
    global i
    global json_obj
    global data
    global page
    global var
    global runningUrl
    global page
    req = request.get_json()

    tempUrl = ""
    runningUrl = baseUrl + req['genreString'] + "&page="
    tempUrl = baseUrl + req['genreString'] + "&page=" + str(page)

    i = 0
    json_obj = urlopen(tempUrl)
    data = json.load(json_obj)
    var = data['results']
    list_len = len(data['results'])

    if str(var[i]['id']) in str(dontWatch) or str(var[i]['id']) in str(watch):
        print("true")
        while str(var[i]['id']) in str(dontWatch) or str(var[i]['id']) in str(watch):
            updateMovies()
    res = make_response(jsonify({"message": "JSON recieved", "title":var[i]['title'],"rating":var[i]['vote_average'],"description":var[i]['overview'],"poster":var[i]['poster_path']},200))
    return res

@views.route('/setExcludeGenres', methods=['GET','POST'])
def setExcludeGenres():
    global constantString
    global baseUrl
    global i
    global json_obj
    global data
    global page
    global var
    global runningUrl
    global page
    global excludeGenres
    req = request.get_json()
    stringTemp = ""
    stringTemp = str(req['genreString'])
    excludeGenres = stringTemp.split(',')
    res = make_response(jsonify({"message": "JSON recieved", "title":var[i]['title'],"rating":var[i]['vote_average'],"description":var[i]['overview'],"poster":var[i]['poster_path']},200))
    return res

@views.route('/dontWatch', methods=['GET','POST'])
def dont_Watch():
    req = request.get_json()
    global constantString
    global baseUrl
    global i
    global json_obj
    global data
    global page
    global var
    global watch
    global dontWatch
    dontWatchTitle.append(var[i]['tite'])
    dontWatch.append(var[i]['id'])
    db.update(
        {"email":str(User().getSession())},
        {"$push":{
            "dontWatch": str(var[i]['id'])
         }}
        )

    updateMovies()
    #print(dontWatch)
    #if i == 20:
    #    tempUrl = ""
    #    i = 0
    #    page +=1
    #    tempUrl = runningUrl + str(page)
    #    json_obj = urlopen(tempUrl)
    #    data = json.load(json_obj)
    #    var = data['results']
    res = make_response(jsonify({"message": "JSON recieved", "title":var[i]['title'],"rating":var[i]['vote_average'],"description":var[i]['overview'],"poster":var[i]['poster_path']},200))
    return res

@views.route('/Watch', methods=['GET','POST'])
def will_Watch():
    req = request.get_json()
    global constantString
    global baseUrl
    global i
    global json_obj
    global data
    global page
    global var
    global watch
    global dontWatch
    watchTitle.append(var[i]['title'])
    watch.append(var[i]['id'])
    db.update(
        {"email":str(User().getSession())},
        {"$push":{
            "watch": str(var[i]['id'])
         }}
        )
    updateMovies()
    #if i == 20:
    #    tempUrl = ""
    #    i = 0
    #    page +=1
    #    tempUrl = runningUrl + str(page)
    #    json_obj = urlopen(tempUrl)
    #    data = json.load(json_obj)
    #    var = data['results']
    res = make_response(jsonify({"message": "JSON rWecieved", "title":var[i]['title'],"rating":var[i]['vote_average'],"description":var[i]['overview'],"poster":var[i]['poster_path']},200))
    return res

@views.route('/checkSess', methods=['GET','POST'])
def checkSess():
    print("DASDSAD")
    print(User().getSession())
    req = request.get_json()
    if User().getSession() == "":
        return jsonify({"error":User.getSession()}),400 
    return jsonify({"error":"Logged In"}),200

@views.route('/SetDefault', methods=['GET','POST'])
def SetDefault():
    req = request.get_json()
    global constantString
    global baseUrl
    global i
    global json_obj
    global data
    global page
    global var
    global watch
    global dontWatch
    if User().getSession() == "":
        return jsonify({"error":"Not Logged In"}),400 
    print(User().getSession())
   #print(var[i]['id'])
    tempdata = list(db.find({"email":str(User().getSession())}))
#
    watch = tempdata[0]['watch']
    dontWatch = tempdata[0]['dontWatch']
    skipPresent()
    res = make_response(jsonify({"message": "JSON recieved", "title":var[i]['title'],"rating":var[i]['vote_average'],"description":var[i]['overview'],"poster":var[i]['poster_path']},200))
    return res

def updateMovies():
    global i
    global constantString
    global baseUrl
    global i
    global json_obj
    global data
    global page
    global var
    exclude = 878
    detailsID = baseDetailUrl
    if str(var[i]['id']) in str(dontWatch) or str(var[i]['id']) in str(watch):
        print("Movie Added To Lists and Database Succesfully")
    i += 1
    if i == 20:
        tempUrl = ""
        i = 0
        page +=1
        tempUrl = runningUrl + str(page)
        json_obj = urlopen(tempUrl)
        data = json.load(json_obj)
        var = data['results']

    testDetails = ""
    testDetails = detailsID.replace("movie_id",str(var[i]['id']))
    j = 0
    json_obj2 = urlopen(testDetails)
    data = json.load(json_obj2)
    varDetails = data['genres']
    for id in varDetails:
        if str(id['id']) in excludeGenres:
            print("yes")
    if str(var[i]['id']) in str(dontWatch) or str(var[i]['id']) in str(watch):
        while str(var[i]['id']) in str(dontWatch) or str(var[i]['id']) in str(watch):
            updateMovies()

def skipPresent():
    if str(var[i]['id']) in str(dontWatch) or str(var[i]['id']) in str(watch):
        while str(var[i]['id']) in str(dontWatch) or str(var[i]['id']) in str(watch):
            updateMovies()